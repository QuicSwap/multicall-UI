{"version":3,"sources":["../sass/_font.scss","global.scss","../sass/_color.scss","../sass/_size.scss","components/layout/layout.scss","../sass/_mixin.scss","components/column/column.scss","components/task/task.scss","components/menu/menu.scss","../sass/_animation.scss","../sass/_base.scss","components/builder/builder.scss","components/editor/editor.scss","components/export/export.scss","components/wallet/wallet.scss","components/header/header.scss","families/base.scss","families/ref-finance/ref-finance.scss","families/multicall/multicall.scss","families/near/near.scss"],"names":[],"mappings":"AAAQ;AACA;ACUR;EACI;EACA,aDTG;;;ACcP;EACI;EACA;EACA,kBCPI;EDQJ;;;AAGJ;EACI;EACA;EACA;;;AAGJ;EACI;EACA,kBC3BI;ED4BJ;EACA,OClBG;EDmBH,aDhCG;ECiCH,WE7BS;EF8BT;;AGjCJ;EACI;EACA;EACA;EACA;EACA;;AACA;ECPA;EACA;EACA;EACA;EACA;EAWA;EACA;EACA;EDPI;EACA;EACA,cDfF;ECgBE;;AAEJ;EACI;EACA;EACA;;AACA;EACI;EACA;;AAGR;EACI;EACA;EACA;EACA;EACA;EACA;EACA,kBF7BA;;AIFR;EACI;EDcA;EACA;EACA;ECdA;EACA;EACA;EACA,OHES;EGDT;EACA,cHXE;EGYF,YHZE;EGaF;EACA,eHFU;;AGGV;ED0CA,OHnDO;EGoDP,WFnDS;EGUL,aHVK;EGWL;EACA;;ADwCJ;EAEI,OHrDD;;AIaH;EACI;;AAEJ;EDiCA,OHnDO;EGoDP,WFnDS;EGmBL;EACA;EACA;EACA;;AD8BJ;EAEI,OHrDD;;AIuBH;EACI;;AAEJ;EDuBA,OHnDO;EGoDP,WFnDS;EG6BL;EACA;EACA;EACA;EACA;;ADmBJ;EAEI,OHrDD;;AIkCH;EACI;EDzBJ;EACA;EACA;ECyBI;EACA;;AC5CR;EACI,OJQS;EIPT,YJMU;EILV,eJOU;EINV,eJNE;EIOF;;ACHJ;EACI;EACA,KLNE;EKOF,OLPE;EKQF,OLMS;EKLT;EACA;EACA,kBNHG;EMIH;EACA,eLDU;EKEV;EACA;;AACA;EACI;;AACA;EHAJ;EACA;EACA;EGAQ;EACA,eLTE;EKUF,QLtBN;EKuBM;EACA;EACA,QLTM;EKUN;;AACA;EACI;EACA;EACA;EACA;EACA,WL1BT;EK2BS,ONhBH;EMiBG;;AACA;EAEI;;AAEJ;EACI,ONxBb;EMyBa,kBNpCZ;;AMwCA;EACI;;AAEJ;EACI;EACA;;;AAKZ;EACI;EACA;EACA;EACA;EACA;;AACA;EACI;;AAEJ;EACI;;AACA;EHTJ,OHnDO;EGoDP,WFnDS;EK6DD,WL7DC;;AEoDT;EAEI,OHrDD;;AM+DH;EACI;;AACA;EHPJ,OH5DO;EG6DP,WF5DS;EKoED,WLpEC;;AE6DT;EAEI,OHlEG;;;AM4EX;EACI,OClFgB;EDmFhB;;ARnFI;AACA;AUIR;EACI;EACA;EACA;EACA,aVNG;EUOH,WPJS;EOKT;;;AAGJ;EACI;EACA;EACA;EACA,aVfG;EUgBH,WPbS;EOcT;;;AAGJ;EACI;;;AAGJ;EACI;ELTA;EACA;EACA;EKSA;EACA,KP9BE;;AO+BF;EACI;EACA;EACA;EACA;EACA;;;AChCR;ENcI;EACA;EACA;EMdA,KRNE;;;AQSN;EACI;ENcA;EACA;EMbA;EACA,ORFS;EQGT;EACA;EACA,eRJU;;AEcV;EACI;;AMVJ;EACI;EACA;EACA;EACA;EACA;;AACA;EACI;;AACA;EACI;;AAEJ;EACI;;;AAMhB;EACI;EACA;EACA;EACA,QR7BU;;AQ8BV;EACI;EACA;EACA;EACA;EACA;EACA;;AACA;EACI;;AAEJ;EACI;EACA,OTnCC;ESoCD,WR7CA;;AHTJ;AACA;AUIR;EACI;EACA;EACA;EACA,aVNG;EUOH,WPJS;EOKT;;;AAGJ;EACI;EACA;EACA;EACA,aVfG;EUgBH,WPbS;EOcT;;;AAGJ;EACI;;;AAGJ;EACI;ELTA;EACA;EACA;EKSA;EACA,KP9BE;;AO+BF;EACI;EACA;EACA;EACA;EACA;;;AEhCR;EPcI;EACA;EACA;EOdA;EACA,OVUS;EUTT,WTFG;ESGH;;AACA;EACI;EACA;EACA,eTbF;;ASeF;EACI,WTTK;;AHRL;AACA;AUIR;EACI;EACA;EACA;EACA,aVNG;EUOH,WPJS;EOKT;;;AAGJ;EACI;EACA;EACA;EACA,aVfG;EUgBH,WPbS;EOcT;;;AAGJ;EACI;;;AAGJ;EACI;ELTA;EACA;EACA;EKSA;EACA,KP9BE;;AO+BF;EACI;EACA;EACA;EACA;EACA;;;AG/BR;ERFI;EACA;EACA;EACA;EACA;EAiBA;EACA;EQjBA;EACA;EACA,KVVE;EUWF;;AReA;EACI;;;AQbR;EACI;ERGA;EACA;EACA;EQHA;EACA;EACA;;AACA;EACI;ERHJ;EACA;EACA;;AQGI;EACI,WVlBL;EUmBK,OXRC;EWSD;;AAEJ;ERsCJ,OH5DO;EG6DP,WF5DS;EUuBD;EACA,WVzBL;;AE8DH;EAEI,OHlEG;;AW8BP;EACI;EACA;ERZJ;EACA;EQaI;EACA,eV3BM;EU4BN;;ARdJ;EACI;;AQcA;EACI;EACA;EACA;EACA;EACA;EACA;EACA,ab9CL;Ea+CK,WV5CC;EU6CD,OXjCC;;;AWsCb;EACI,aVpDW;;AUqDX;EAyEI;EACA;;AAzEA;EACI,OX1DN;EW2DM,abzDL;Ea0DK,WVxDC;;AUyDD;EACI;;AAGR;EACI,abhEL;;AaiEK;EACI,OXpDH;;AWsDD;EACI,OXvEV;;AW2EM;EACI,OXhER;EWiEQ,ab5ET;Ea6ES,WV1EH;;AU4ED;ERzDR;EACA;EQ0DY;EACA;;AR1DZ;EACI;;AQ2DI;EACI,cXjFL;EWkFK;EACA;EACA;;AACA;EACI,kBXpFb;EWqFa;EACA;EACA;EACA;;AAEJ;EACI;EACA;;AAGR;EACI,cXnGR;;AWqGI;EACI,cXtGR;;AWwGI;EACI;;AAIJ;EAEI,qBX9GL;;AWgHC;EAEI,qBXnHR;;AWqHI;EACI;;AAGR;EACI,OX9GC;EW+GD;;AAMJ;EACI;;AAEJ;EACI;;AAEJ;EACI;;;AAMZ;EACI;;AACA;EACI;;AACA;EACI,WVlJL;EUmJK,OXxJN;EWyJM;;AAGR;EACI;EACA;EACA;EACA;EACA;EACA,eVvJM;;AUwJN;EACI;EACA;EACA;EACA;ERtJR;EACA;EACA;EQsJQ;EACA;EACA,WVtKL;EUuKK,OX5KN;;AW6KM;ER9IR;EACA;EACA;;AQ+IQ;ER/GR,OH5DO;EG6DP,WF5DS;EU4KG;EACA,OXnLV;EWoLU,WV9KH;;AE6DT;EAEI,OHlEG;;AYDX;ETeI;EACA;EACA;ESfA;EACA,QXNE;EWOF;EACA,WXFG;EWGH,OZOG;EYNH,eXEU;EWDV,kBZNI;;AaDR;EACI;EACA;EACA;EACA;EACA;EACA,kBbDM;EaEN;EACA;;;AAGJ;EACI;EVEA;EACA;EACA;EUFA;;AACA;EVDA;EACA;EACA;EUCI;EACA;EACA,cZvBF;EYwBE;;AACA;EACI,ObTC;EaUD,WZpBC;;AYsBL;EACI,ObbC;EacD,WZxBC;;;AY6Bb;EACI;EACA;EACA;;AACA;EACI;EACA;;Af3CA;AACA;AgBIR;EACI,YdDO;;AcEP;EACI;;AACA;EACI,OdOL;;AcLC;EACI;;AAGR;EACI;;;AAIR;EACI;EACA;EACA;EACA;EACA,YbfU;EagBV,ebdU;EaeV;;AACA;EACI,OdbD;;AceH;EXbA;EACA;EACA;EWaI,Wb3BD;Ea4BC;EACA;;AACA;EACI,OdpBC;;AcsBL;EXkBJ,OHnDO;EGoDP,WFnDS;EakCD;EACA;EACA,Md1BC;Ec2BD;;AXeR;EAEI,OHrDD;;AcqCK;EAEI,Od3CL;;Ac+CP;EX3BA;EACA;EW4BI;EACA;EACA;EACA;EACA,gBbzDF;Ea0DE;;AXhCJ;EACI;;AWgCA;EXnCJ;EACA;EWoCQ;EACA;EACA;EACA;EACA,ahB/DL;EgBgEK,Wb9DG;Ea+DH;;AXzCR;EACI;;AW0CA;EACI;EACA;EACA;EACA;EACA;EACA,WbtEC;;AauED;EACI;;AAEJ;EX/CR;EACA;EACA;EW+CY;EACA;EACA,ahBjFT;EgBkFS,WbhFD;;AakFH;EACI;;;AAMhB;EX1FI;EACA;EACA;EACA;EACA;EAiBA;EACA;EWuEA;;AXtEA;EACI;;AWsEJ;EX/EA;EACA;EACA;EW+EI;;AAEI;EACI;;AAEJ;EACI;EACA;;AACA;EACI;EACA;EACA,WbzGP;;Aa8GD;EACI;;AAEJ;EACI;;AAIZ;EXzGA;EACA;EACA;EWyGI;EACA;;AACA;EACI,Od/GC;EcgHD,Wb5HC;;Aa8HL;EACI,Od/HJ;;AcgII;EACI,OdvIR;;AcyII;EACI,WbnIT;;AauIH;EAyEI;;AAxEA;EACI,Od9IN;Ec+IM,ahB7IL;EgB8IK,Wb5IC;;Aa6ID;EACI;;AAGR;EACI,ahBpJL;;AgBqJK;EACI,OdxIH;;Ac0ID;EACI,Od3JV;;Ac+JM;EACI,OdpJR;EcqJQ,ahBhKT;EgBiKS,Wb9JH;;AagKD;EX7IR;EACA;EW8IY;EACA;;AX9IZ;EACI;;AW+II;EACI,cdrKL;EcsKK;EACA;EACA;;AACA;EACI,kBdxKb;EcyKa;EACA;EACA;EACA;;AAEJ;EACI;EACA;;AAGR;EACI,cdvLR;;AcyLI;EACI,cd1LR;;Ac4LI;EACI;;AAIJ;EAEI,qBdlML;;AcoMC;EAEI,qBdvMR;;AcyMI;EACI;;AAGR;EACI,OdlMC;EcmMD;;AAKJ;EACI;;AAEJ;EACI;;AAEJ;EACI;;;AAKZ;EACI,WbhOG;;AcLP;AAAA;EAEI;;ACFJ;EACI,YhBOM;;AiBPV;EACI,YjBCO;;AiBAP;EACI;;AACA;EACI,OjBSL;;AiBPC;EACI,MjBML;;AiBHH;EACI","file":"src.e31bb0bc.css","sourceRoot":"../src","sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&family=Titillium+Web:ital,wght@0,200;0,400;0,600;1,400&display=swap');\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\n\n$code: 'Roboto Mono', monospace;\n$text: 'Titillium Web', sans-serif;","@use 'sass/color';\n@use 'sass/size';\n@use 'sass/font';\n@use 'sass/mixin';\n\n// displays\n// alignment\n// sizes\n// colors\n// fonts\n\n* {\n    margin: 0;\n    font-family: font.$text;\n    // outline: 1px solid aqua;\n    // background-color: rgba(aqua, 0.1);\n}\n\nbody, html, #root {\n    width: 100%;\n    height: 100%;\n    background-color: color.$white;\n    font-size: 62.5%;// 0.485vw; // 1rem = 10px\n}\n\na {\n    color: color.$blue !important;\n    text-decoration: none;\n    cursor: pointer;\n}\n\nbutton {    \n    padding: 0.5 * size.$gap 2 * size.$gap;\n    background-color: color.$light;\n    border: none;\n    color: color.$text;\n    font-family: font.$text;\n    font-size: size.$large-text;\n    cursor: pointer;\n}","$green: #93c99e;\n$purple: #d8beda;\n$red: #f6a7b2;\n$blue: #b2dff2;\n\n$lightest: #dcefea;\n$light: #b4ccca;\n$lightish: #8fa9ac;\n$darkish: #6c888f;\n$dark: #4c6773;\n$darkest: #2f4858;\n\n$fake-column: #e9faf6;\n\n$white: #edfdf9;\n$black: #2a2a2a;\n\n$text: #2a2a2a;\n$light-text: #e0e0e0;","$unit: 1.6rem;\n$gap: 3.2rem;\n\n$stroke: 3.2rem;\n\n$smaller-text: 1.2rem;\n$small-text: 1.4rem;\n$text: 1.8rem;\n$large-text: 2.4rem;\n$huge-text: 9.6rem;\n\n$task-height: 19.2rem;\n$task-width: 40rem; \n$task-radius: 2.4rem;\n\n$menu-width: 0rem;// 25vw;\n\n$tab-list-height: 3.2rem;","@use 'sass/mixin';\n@use 'sass/size';\n@use 'sass/color';\n@use 'sass/animation';\n\n.layout-wrapper {\n    position: relative;\n    display: flex;\n    flex-flow: row nowrap;\n    height: calc(100% - 2 * size.$gap);\n    top: 2 * size.$gap;\n    .layout-container {\n        @include mixin.full;\n        @include mixin.center-items(center, flex-start);\n        flex: 1 1 0;\n        flex-flow: row nowrap;\n        padding-left: size.$gap;\n        width: auto;\n    }\n    .empty-container {\n        flex-shrink: 0;\n        flex-basis: calc(4 * size.$gap + size.$task-width);\n        transition: flex-basis animation.$menu-expand-time ease-out;\n        &.expanded-empty {\n            flex-basis: calc(2 * size.$gap + animation.$menu-expand-width);\n            transition: flex-basis animation.$menu-expand-time ease-out;\n        }\n    }\n    &::before {\n        content: '';\n        position: fixed;\n        top: 2 * size.$gap;\n        left: 0;\n        height: calc(2.5 * size.$gap - 0.5 * (size.$gap - size.$large-text));\n        min-width: 100%;\n        background-color: color.$light;\n    }\n}","@use 'sass/size';\n@use 'sass/color';\n\n@mixin full {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n}\n\n@mixin available-width {\n    width: 100%;\n    width: -moz-available;          /* WebKit-based browsers will ignore this. */\n    width: -webkit-fill-available;  /* Mozilla-based browsers will ignore this. */\n    width: fill-available;\n}\n\n@mixin center-items($x: center, $y: center) {\n    display: flex;\n    justify-content: #{$x};\n    align-items: #{$y};\n}\n\n@mixin no-scrollbar {\n    scrollbar-width: none;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n    &::-webkit-scrollbar {\n        display: none;\n    }\n}\n\n@mixin no-wrap {\n    overflow: hidden; \n    text-overflow: ellipsis;\n    white-space: nowrap;  \n}\n\n@mixin popup {\n    position: fixed;\n    display: flex;\n    justify-content: center;\n    z-index: 2;\n    gap: size.$gap;\n    padding: 12.5vh 12.5%;\n    width: 75%;\n    height: 75vh;\n    top: 0;\n    left: 0;\n    background-color: rgba(255, 255, 255, 0.87);\n    button, .button-container {\n        position: absolute;\n        bottom: size.$gap;\n        right: size.$gap;\n    }\n}\n\n@mixin icon {\n    color: color.$lightish;\n    font-size: size.$large-text;\n    &:hover,\n    &:focus {\n        color: color.$dark;\n    }\n}\n\n@mixin light-icon {\n    color: color.$lightish;\n    font-size: size.$large-text;\n    &:hover,\n    &:focus {\n        color: color.$lightest;\n    }\n}","@use 'sass/size';\n@use 'sass/color';\n@use 'sass/mixin';\n\n.column-container {\n    flex: 0 0 size.$task-width;\n    @include mixin.center-items(flex-start, center);\n    flex-flow: column nowrap;\n    position: relative;\n    min-height: calc(100% - 2 * size.$gap);\n    width: size.$task-width;\n    padding: 0 size.$gap;\n    margin-right: size.$gap;\n    margin-top: size.$gap;\n    background-color: rgba(color.$lightest, 0.25);\n    border-radius: size.$task-radius;\n    .drag-handle {\n        @include mixin.icon;\n        line-height: size.$large-text;\n        padding: 0.5 * size.$gap;\n        scale: 3 1;\n    }\n    .hidden {\n        display: none;\n    }\n    .delete-column {\n        @include mixin.icon;\n        position: absolute;\n        top: 0.5 * size.$gap;\n        right: 0.5 * size.$gap;\n        cursor: pointer;\n    }\n    &:not(:last-of-type) > .add-column {\n        opacity: 0;\n    }\n    &:last-of-type > .add-column {\n        @include mixin.icon;\n        position: absolute;\n        top: 0.5 * size.$gap;\n        right: -1 * size.$gap;\n        transition: opacity 200ms ease-in-out;\n        cursor: pointer;\n    }\n    .tasks-wrapper {\n        flex: 1;\n        @include mixin.center-items(flex-start);\n        width: 100%;\n        flex-flow: column nowrap;\n    }\n}","@use 'sass/size';\n@use 'sass/color';\n\n.task-wrapper {\n    width: size.$task-width;\n    min-height: size.$task-height;\n    border-radius: size.$task-radius;\n    margin-bottom: size.$gap;\n    overflow: hidden;\n}","@use 'sass/color';\n@use 'sass/size';\n@use 'sass/mixin';\n@use 'sass/animation';\n\n.menu-container {\n    position: fixed;\n    top: size.$gap;\n    right: size.$gap;\n    width: size.$menu-width;\n    height: calc(100% - 2 * size.$gap);\n    min-width: calc(size.$task-width + 2 * size.$gap);\n    background-color: color.$dark;\n    box-shadow: 1px 10px 20px 0 rgba(0,0,0,0.2);\n    border-radius: size.$task-radius;\n    z-index: 2;\n    transition: width animation.$menu-expand-time ease-out;\n    .tabs {\n        height: 100%;\n        .tab-list {\n            @include mixin.center-items;\n            background-color: rgba(color.$darkest, 0.25);\n            border-radius: size.$task-radius;\n            margin: size.$gap;\n            padding: 0;\n            width: calc(100% - 2 * size.$gap);\n            height: size.$tab-list-height;\n            overflow: hidden;\n            button {\n                flex: 1;\n                padding: 0;\n                width: 30%;\n                height: 100%;\n                font-size: size.$text;\n                color: color.$light-text;\n                background-color: transparent;\n                &:focus,\n                &:hover {\n                    background-color: rgba(color.$darkest, 0.25);\n                }\n                &.active-tab {\n                    color: color.$text;\n                    background-color: color.$light;\n                }\n            }\n        }\n        .hidden {\n            display: none;\n        }\n        .active-panel {\n            width: 100%;\n            height: 100%;\n        }\n    }\n}\n\n.toggle-size {\n    position: absolute;\n    left: calc(-0.5 * (size.$large-text + size.$gap));\n    top: calc(50% - 0.5 * size.$large-text);\n    width: calc(size.$large-text + size.$gap);\n    transition: transform animation.$menu-expand-time linear;\n    .icon {\n        scale: 1.2;\n    }\n    &.expand {\n        transform: scaleX(1);\n        .icon {\n            @include mixin.icon;\n            font-size: size.$large-text;\n        }\n    }\n    &.collapse {\n        transform: scaleX(-1);\n        .icon {\n            @include mixin.light-icon;\n            font-size: size.$large-text;\n        }\n    }\n}\n\n.expanded-menu {\n    width: animation.$menu-expand-width;\n    transition: width animation.$menu-expand-time ease-out;\n}","$menu-expand-width: 50%;\n$menu-expand-time: 200ms;","@use 'sass/color';\n@use 'sass/size';\n@use 'sass/font';\n@use 'sass/mixin';\n\n.themed-input {\n    background-color: #ffffff;\n    height: size.$text;\n    text-align: right;\n    font-family: font.$code;\n    font-size: size.$small-text;\n    border: 1px solid color.$dark;\n}\n\n.themed-textarea {\n    background-color: #ffffff;\n    height: 200px;\n    text-align: left;\n    font-family: font.$code;\n    font-size: size.$small-text;\n    border: 1px solid color.$dark;\n}\n\n.spacer {\n    flex: 1;\n}\n\n.tab-panel {\n    height: calc(100% - size.$tab-list-height - 2 * size.$gap);\n    @include mixin.center-items;\n    flex-flow: column;\n    gap: size.$gap;\n    & > div {\n        display: flex;\n        flex-flow: column nowrap;\n        height: calc(100% - size.$gap);\n        width: calc(100% - (2 * size.$gap));\n        padding: 0 size.$gap size.$gap size.$gap;\n    }\n}","@use 'sass/mixin';\n@use 'sass/size';\n@use 'sass/color';\n@use 'sass/base';\n\n.builder-container {\n    @include mixin.center-items(flex-start);\n    gap: size.$gap;\n}\n\n.selector {\n    flex: 1;\n    @include mixin.no-scrollbar;\n    z-index: 2;\n    width: size.$task-width;\n    max-height: calc(100% - #{size.$gap} - #{size.$task-height});\n    overflow-y: scroll;\n    border-radius: size.$task-radius;\n    .column-container {\n        width: 100%;\n        height: 100%;\n        padding: 0 !important;\n        margin: 0 !important;\n        background-color: rgba(color.$darkest, 0.25);\n        .tasks-wrapper {\n            flex: 1 1 0;\n            .task-wrapper:last-of-type {\n                margin-bottom: 0 !important;\n            }\n            .icon {\n                display: none;\n            }\n        }\n    }\n}\n\n.trash {\n    flex: 0 0 size.$task-height;\n    z-index: 2;\n    width: 100%;\n    height: size.$task-height;\n    .column-container {\n        justify-content: center;\n        width: 100%;\n        height: 100%;\n        padding: 0 !important;\n        margin: 0 !important;\n        background-color: rgba(color.$darkest, 0.25);\n        .tasks-wrapper {\n            height: 100%;\n        }\n        .icon {\n            position: absolute;\n            color: color.$light-text;\n            font-size: size.$huge-text;\n        }\n    }\n}","@use 'sass/size';\n@use 'sass/mixin';\n@use 'sass/base';\n@use 'sass/color';\n\n.placeholder {\n    @include mixin.center-items;\n    padding: 0 size.$gap;\n    color: color.$light-text;\n    font-size: size.$text;\n    text-align: center;\n    .huge-icon {\n        font-size: 2 * size.$huge-text;\n        margin-top: -2 * size.$gap;\n        margin-bottom: size.$gap;\n    }\n    h3 > .icon {\n        font-size: size.$large-text;\n    }\n}","@use 'sass/base';\n@use 'sass/color';\n@use 'sass/size';\n@use 'sass/mixin';\n@use 'sass/font';\n\n.export-container {\n    @include mixin.full;\n    @include mixin.no-scrollbar;\n    display: flex;\n    flex-flow: column nowrap;\n    gap: size.$gap;\n    overflow-y: scroll;\n}\n\n.section {\n    flex: 1;\n    @include mixin.center-items(flex-start);\n    flex-flow: column nowrap;\n    width: 100%;\n    max-height: 25%;\n    .header {\n        width: calc(100% - size.$gap);\n        @include mixin.center-items(space-between);\n        h3 {\n            font-size: size.$text;\n            color: color.$light-text;\n            text-align: left;\n        }\n        .icon {\n            @include mixin.light-icon;\n            cursor: pointer;\n            font-size: size.$text;\n        }\n    }\n    .value {\n        flex: 1;\n        width: 100%;\n        @include mixin.no-scrollbar;\n        background-color: rgba(color.$darkest, 0.25);\n        border-radius: size.$task-radius;\n        overflow-y: scroll;\n        .code {\n            padding: 0.5 * size.$gap;\n            overflow: auto;\n            white-space: pre-wrap;\n            white-space: -moz-pre-wrap;\n            white-space: -o-pre-wrap;\n            word-wrap: break-word;\n            font-family: font.$code;\n            font-size: size.$small-text;\n            color: color.$light-text;\n        }\n    }\n}\n\n.input-container {\n    padding-top: size.$smaller-text;\n    .MuiTextField-root {\n        p.Mui-error {\n            color: color.$red;\n            font-family: font.$text;\n            font-size: size.$small-text;\n            &::before {\n                content: 'Error: '\n            }\n        }\n        label {\n            font-family: font.$text;\n            &.Mui-focused {\n                color: color.$light-text;\n            }\n            &.Mui-error {\n                color: color.$red;\n            }\n        }\n        .MuiOutlinedInput-root {\n            input, textarea {\n                color: color.$white;\n                font-family: font.$code;\n                font-size: size.$small-text;\n            }\n            textarea {\n                @include mixin.no-scrollbar;\n                white-space: pre;\n                overflow-x: scroll !important;\n            }\n            fieldset {\n                border-color: color.$lightish;\n                border-width: 1px;\n                background-color: rgba(color.$darkest, 0.25);\n                border-radius: 0;\n                legend {\n                    background-color: color.$dark;\n                    margin-left: -2px;\n                    padding: 2px;\n                    border-radius: 20px;\n                    visibility: visible;\n                }\n                legend > span {\n                    font-size: 0.75em;\n                    visibility: hidden;\n                }\n            }\n            &:hover fieldset {\n                border-color: color.$light;\n            }\n            &.Mui-focused fieldset {\n                border-color: color.$light;\n            }\n            &.Mui-error fieldset {\n                border-color: color.$red !important;\n            }\n        }\n        .MuiInput-underline {\n            &:hover::before,\n            &::before {\n                border-bottom-color: color.$lightish;\n            }\n            &:hover::after,\n            &::after {\n                border-bottom-color: color.$light;\n            }\n            input {\n                font-weight: 500;\n            }\n        }\n        *:not(input) {\n            color: color.$light-text;\n            font-size: 1em;\n        }\n        width: 100%;\n        font-size: 1.8rem;\n    }\n    & > .MuiTextField-root {\n        &:first-of-type {\n            margin-top: 0;\n        }\n        &:first-of-type > .MuiOutlinedInput-root > fieldset {\n            border-radius: size.$task-radius size.$task-radius 0 0;\n        }\n        &:last-of-type > .MuiOutlinedInput-root > fieldset {\n            border-radius: 0 0 size.$task-radius size.$task-radius;\n        }\n    }\n}\n\n\n.error-container {\n    width: 100%;\n    .header {\n        padding-left: 0.5 * size.$gap;\n        h3 {\n            font-size: size.$text;\n            color: color.$red;\n            text-align: left;\n        }\n    }\n    .error-list {\n        width: 100%;\n        display: flex;\n        flex-flow: column nowrap;\n        padding-top: 0.5 * size.$gap;\n        background-color: rgba(color.$darkest, 0.25);\n        border-radius: size.$task-radius;\n        .error {\n            width: 100%;\n            max-width: calc(100% - size.$gap);\n            padding: 0.5 * size.$gap;\n            padding-top: 0;\n            @include mixin.center-items(space-between);\n            gap: 0.5 * size.$gap;\n            flex-flow: row nowrap;\n            font-size: size.$text;\n            color: color.$red;\n            .msg {\n                @include mixin.no-wrap;\n            }\n            .icon {\n                @include mixin.light-icon;\n                cursor: pointer;\n                color: color.$red;\n                font-size: size.$large-text;\n            }\n        }\n    }\n}\n\n","@use 'sass/size';\n@use 'sass/color';\n@use 'sass/mixin';\n\n.wallet {\n    @include mixin.center-items;\n    gap: 0.5 * size.$gap;\n    height: size.$gap;\n    padding: 0 0.5 * size.$gap;\n    font-size: size.$text;\n    color: color.$text;\n    border-radius: size.$task-radius;\n    background-color: color.$light;\n}","@use 'sass/mixin';\n@use 'sass/color';\n@use 'sass/size';\n@use 'sass/animation';\n\n.header-wrapper {\n    position: fixed;\n    display: flex;\n    flex-flow: row nowrap;\n    width: 100%;\n    height: 2 * size.$gap;\n    background-color: color.$darkest;\n    box-shadow: 1px 10px 20px 0 rgba(0,0,0,0.2);\n    z-index: 2;\n}\n\n.header-container {\n    flex: 1;\n    @include mixin.center-items(space-between);\n    flex-flow: row nowrap;\n    .title {\n        @include mixin.center-items;\n        flex-flow: row nowrap;\n        gap: 0.5 * size.$gap;\n        padding-left: size.$gap;\n        cursor: pointer;\n        h1 {\n            color: color.$light-text;\n            font-size: size.$large-text;\n        }\n        .logo {\n            color: color.$light-text;\n            font-size: size.$large-text;\n        }\n    }\n}\n\n.empty-container {\n    flex-shrink: 0;\n    flex-basis: calc(4 * size.$gap + size.$task-width);\n    transition: flex-basis animation.$menu-expand-time ease-out;\n    &.expanded-empty {\n        flex-basis: calc(2 * size.$gap + animation.$menu-expand-width);\n        transition: flex-basis animation.$menu-expand-time ease-out;\n    }\n}","@use 'sass/color';\n@use 'sass/size';\n@use 'sass/font';\n@use 'sass/mixin';\n\n.base-task  {\n    background: color.$lightest;\n    .name {\n        color: color.$text !important;\n        h3 {\n            color: color.$text;\n        }\n        .icon {\n            fill: color.$text !important;\n        }\n    }\n    * > a {\n        color: darken(color.$blue, 20%) !important;\n    }\n}\n\n.task-container {\n    position: relative;\n    display: flex;\n    flex-flow: column nowrap;\n    width: 100%;\n    min-height: size.$task-height;\n    border-radius: size.$task-radius;\n    overflow: hidden;\n    * {\n        color: color.$text;\n    }\n    .name {\n        @include mixin.center-items;\n        font-size: size.$text;\n        padding-top: 0.25 * size.$gap;\n        padding-bottom: 0.25 * size.$gap;\n        * {\n            color: color.$light-text;\n        }\n        .icon {\n            @include mixin.icon;\n            position: absolute;\n            right: 0.5 * size.$gap;\n            fill: color.$light-text;\n            cursor: pointer;\n            &:hover,\n            &:focus {\n                color: color.$lightest;\n            }\n        }\n    }\n    .data-container {\n        @include mixin.no-scrollbar;\n        flex: 1;\n        max-height: 100%;\n        overflow-y: scroll;\n        padding: 0.5 * size.$gap;\n        padding-bottom: size.$gap;\n        background-color: rgba(color.$light, 0.5);\n        pre.code {\n            @include mixin.no-scrollbar;\n            padding: 0.5rem;\n            margin: 0.5rem;\n            background-color: rgba(color.$lightest, 1);\n            border-radius: 0.5 * size.$task-radius;\n            font-family: font.$code;\n            font-size: size.$smaller-text;\n            overflow-x: scroll;\n        }\n        p {\n            display: flex;\n            width: 100%;\n            flex-flow: row nowrap;\n            justify-content: space-between;\n            margin-bottom: -0.3rem;\n            font-size: size.$small-text;\n            span {\n                white-space: nowrap;\n            }\n            .code {\n                @include mixin.no-wrap;\n                padding-left: 1.5rem;\n                line-height: 1.85rem;\n                font-family: font.$code;\n                font-size: size.$smaller-text;\n            }\n            &.expandable {\n                flex-wrap: wrap;\n            }\n        }\n    }\n}\n\n.edit {\n    @include mixin.full;\n    @include mixin.no-scrollbar;\n    overflow-y: scroll;\n    .unitInput {\n        @include mixin.center-items(center, flex-start);\n        flex-flow: row nowrap;\n        .MuiTextField-root {\n            &:first-of-type {\n                flex: 2 1 auto;\n            }\n            &:last-of-type {\n                flex: 1 0 40px;\n                margin-left: 0.25 * size.$gap;\n                select {\n                    height: 2rem;\n                    line-height: 1rem;\n                    font-size: size.$small-text;\n                }\n            }\n        }\n        &:last-of-type .MuiTextField-root {\n            &:first-of-type fieldset {\n                border-radius: 0 0 0 size.$task-radius;\n            }\n            &:last-of-type fieldset {\n                border-radius: 0 0 size.$task-radius 0;\n            }\n        }\n    }\n    .checkbox {\n        @include mixin.center-items(flex-start, center);\n        flex-flow: row nowrap;\n        width: 100%;\n        p {\n            color: color.$light-text;\n            font-size: size.$small-text;\n        }\n        .MuiCheckbox-root {\n            color: color.$light;\n            &.Mui-checked {\n                color: color.$green;\n            }\n            .MuiSvgIcon-root {\n                font-size: size.$text;\n            }\n        }\n    }\n    .MuiTextField-root {\n        p.Mui-error {\n            color: color.$red;\n            font-family: font.$text;\n            font-size: size.$small-text;\n            &::before {\n                content: 'Error: '\n            }\n        }\n        label {\n            font-family: font.$text;\n            &.Mui-focused {\n                color: color.$light-text;\n            }\n            &.Mui-error {\n                color: color.$red;\n            }\n        }\n        .MuiOutlinedInput-root {\n            input, textarea {\n                color: color.$white;\n                font-family: font.$code;\n                font-size: size.$small-text;\n            }\n            textarea {\n                @include mixin.no-scrollbar;\n                white-space: pre;\n                overflow-x: scroll !important;\n            }\n            fieldset {\n                border-color: color.$lightish;\n                border-width: 1px;\n                background-color: rgba(color.$darkest, 0.25);\n                border-radius: 0;\n                legend {\n                    background-color: color.$dark;\n                    margin-left: -2px;\n                    padding: 2px;\n                    border-radius: 20px;\n                    visibility: visible;\n                }\n                legend > span {\n                    font-size: 0.75em;\n                    visibility: hidden;\n                }\n            }\n            &:hover fieldset {\n                border-color: color.$light;\n            }\n            &.Mui-focused fieldset {\n                border-color: color.$light;\n            }\n            &.Mui-error fieldset {\n                border-color: color.$red !important;\n            }\n        }\n        .MuiInput-underline {\n            &:hover::before,\n            &::before {\n                border-bottom-color: color.$lightish;\n            }\n            &:hover::after,\n            &::after {\n                border-bottom-color: color.$light;\n            }\n            input {\n                font-weight: 500;\n            }\n        }\n        *:not(input) {\n            color: color.$light-text;\n            font-size: 1em;\n        }\n        font-size: 1.8rem;\n    }\n    & > .MuiTextField-root {\n        &:first-of-type {\n            margin-top: 0;\n        }\n        &:nth-of-type(2) > .MuiOutlinedInput-root > fieldset {\n            border-radius: size.$task-radius size.$task-radius 0 0;\n        }\n        &:last-of-type > .MuiOutlinedInput-root > fieldset {\n            border-radius: 0 0 size.$task-radius size.$task-radius;\n        }\n    }\n}\n\noption {\n    font-size: size.$text;\n}","@use 'sass/color';\n\n.ref-withdraw-task,\n.ref-swap-task {\n    background: linear-gradient(to top, #00c08b, #009289, #006474, #00384e, #001220);\n}","@use 'sass/color';\n\n.multicall-transfer-task {\n    background: color.$darkest;\n}","@use 'sass/color';\n@use 'sass/mixin';\n\n.near-transfer-task {\n    background: color.$lightest;\n    .name {\n        color: color.$text !important;\n        h3 {\n            color: color.$text;\n        }\n        .icon {\n            fill: color.$text;\n        } \n    }\n    * > a {\n        color: darken(color.$blue, 20%) !important;\n    }\n}"]}